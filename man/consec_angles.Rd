% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consec_angles.R
\name{consec_angles}
\alias{consec_angles}
\title{Method of consecutive angles.}
\usage{
consec_angles(vec, range, drop_tol = 3, range_tol)
}
\arguments{
\item{vec}{Vector of values - the values should be decreasing and the vector should include at least 4 values.}

\item{range}{Range vector - this corresponds to the x values corresponding to the vec values. Values should be unique and increasing, while the vector needs to be of length equal to vec.}

\item{drop_tol}{Tolerated level of drop in consecutive vec values for which
a drop is not considered significant. The default value is 3 assuming integer values in vec
but this can be modified.}

\item{range_tol}{Parameter used to restrict the search, so that if the index of the value where
a drop is found exceeds range_tol, the kneedle algorithm is used and the elbow point is
returned instead. Set this to the maximum value in range if you don't want such a restriction.}
}
\value{
Value of range beyond which there is no longer a significant drop in consecutive vec values.
}
\description{
This function implements the method of consecutive angles for determining
the point where a large drop occurs in a more efficient way than the kneedle algorithm.
The function takes 2 input arguments vec and range which corresponding to the vector
of overvations and their corresponding x values. The method requires setting a value
for drop_tol, that is the tolerated level of drop in consecutive vec values for which
a drop is not considered significant. The default value is 3 assuming integer values in vec
but this can be modified. If the method of consecutive angles returns
a very large value in the range vector that does not seem to be plausible,
the parameter range_tol can restrict the search, so that if the index of the value where
a drop is found exceeds range_tol, the kneedle algorithm is used and the elbow point is
returned instead.
}
\examples{
consec_angles(vec = sort(rnorm(10), decreasing = TRUE), range = c(1:10), drop_tol = 0.7, range_tol = 8)
}
